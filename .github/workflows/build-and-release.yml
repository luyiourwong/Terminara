name: build-release

on:
  workflow_run:
    workflows: [ "release-please" ]
    types:
      - completed

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        include:
          - os: windows-latest
            output_name: terminara.exe
          - os: ubuntu-latest
            output_name: terminara

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller main.spec

      - name: Get latest release
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            return releases.data[0];

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ fromJson(steps.get_release.outputs.result).upload_url }}
          asset_path: dist/${{ matrix.output_name }}
          asset_name: ${{ matrix.output_name }}
          asset_content_type: application/octet-stream